import os

Import('env')

# create build environment
buildEnv = env.Clone()

# inherit environment from user (PATH, etc)
buildEnv['ENV'] = os.environ

# choose bsp. Normally this would be the same as the board name,
# however, there are cases where one might want to make separate build
# configuration for the same board.
buildEnv['BSP'] = buildEnv['board']

# include board/bsp-specific directories
buildEnv.Append(
   CPPPATH = [
      os.path.join('#','firmware','openos','bsp','boards',buildEnv['board']),
   ]
)

PICVERSION = "33FJ128MC706A"
if   buildEnv['toolchain']=='xc16':
   commonflags = []
   commonflags += ['-mcpu={0}'.format(PICVERSION)]
   #flags += ['-Os'] #This is disabled because the free XC16 compiler doesn't do opt
   commonflags += ['-D__IMAGEPROC2 -mcci -msmart-io=0 -omf=elf -Wall -msfr-warn=off ']
   linkflags = commonflags;
   linkflags += ['-Wl,--defsym=__MPLAB_BUILD=1,,--script=p33FJ128MC706A.gld,--heap=8192,--stack=512,--check-sections,--data-init,--pack-data,--handles,--isr,--no-gc-sections,--fill-upper=0,--stackguard=16,--no-force-link,--smart-io,--report-mem,-ldsp-elf']
   buildEnv.Append(CCFLAGS   = ' '.join(commonflags))
   buildEnv.Append(LINKFLAGS = ' '.join(linkflags))

Return('buildEnv')
